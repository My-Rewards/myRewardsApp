name: Promote development to master

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Promote development to master?'
        required: true
        default: yes
        type: choice
        options:
          - yes
          - no
      version:
        description: 'Version increment (major.minor.patch)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: write
  statuses: write

jobs:
  build-test-promote:
    if: ${{ github.event.inputs.confirm}}
    runs-on: ubuntu-latest

    steps:
      - name: Generate GitHub App token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.BOT_KEY }}

      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}

      - name: Set Git identity
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

#      - name: Run tests
#        run: npm test

      - name: Calculate version
        id: semver
        uses: paulhatch/semantic-version@v5.0.3
        with:
          bump: ${{ github.event.inputs.version }}
          tag_prefix: "v"

      - name: Create release branch
        run: |
          git checkout development
          git pull origin development
          git checkout -b release/v${{ steps.semver.outputs.version }}

      - name: Create version commit
        run: |
          echo "Version ${{ steps.semver.outputs.version }}" > VERSION
          git add VERSION
          git commit -m "chore: bump version to ${{ steps.semver.outputs.version }}"
          git push origin release/v${{ steps.semver.outputs.version }}

      - name: Merge to master
        run: |
          git checkout master
          git pull origin master
          git merge --no-ff release/v${{ steps.semver.outputs.version }} -m "chore: release version ${{ steps.semver.outputs.version }}"
          git push origin master

      - name: Tag release
        run: |
          git tag -a v${{ steps.semver.outputs.version }} -m "Release v${{ steps.semver.outputs.version }}"
          git push origin v${{ steps.semver.outputs.version }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        with:
          tag_name: v${{ steps.semver.outputs.version }}
          release_name: Release v${{ steps.semver.outputs.version }}
          draft: false
          prerelease: false

      - name: Merge release back to development
        run: |
          git checkout development
          git merge --no-ff v${{ steps.semver.outputs.version }} -m "chore: merge release v${{ steps.semver.outputs.version }} back to development"
          git push origin development

      - name: Clean up release branch
        if: success()
        run: |
          # Only attempt to delete if the branch exists remotely
          if git ls-remote --heads origin release/v${{ steps.semver.outputs.version }} | grep -q release/v${{ steps.semver.outputs.version }}; then
            git push origin --delete release/v${{ steps.semver.outputs.version }}
            echo "✅ Removed temporary release branch"
          else
            echo "⚠️ Release branch doesn't exist or was already deleted"
          fi

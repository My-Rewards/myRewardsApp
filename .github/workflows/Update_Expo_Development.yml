name: Update Development Build

on:
  push:
    branches:
      - development
jobs:
  update:
    runs-on: ubuntu-latest
    env:
      APP_ENV: beta 
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v4

      - name: 🏗 Setup Node
        uses: actions/setup-node@v4
        with:
          cache-dependency-path: "**/package-lock.json"
          node-version: 20
          cache: 'npm'
      
      - name: ☁️ Configure AWS credentials ☁️
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_BETA }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY_VAL_BETA }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Fetch SSM Parameters
        id: fetch_ssm_parameters
        run: |
          # Fetch parameters from SSM
          PARAMS=$(aws ssm get-parameters --names "/myRewardsApp/$APP_ENV/customerUserPoolId" "/myRewardsApp/$APP_ENV/customerWebClientId" "/myRewardsApp/$APP_ENV/identityPoolIdCustomer" "/myRewardsApp/$APP_ENV/appConfig" --with-decryption --region us-east-1)
  
          # Fix the environment variable setting syntax
          echo "USERPOOL_ID=$(echo "$PARAMS" | jq -r '.Parameters[] | select(.Name=="/myRewardsApp/'"$APP_ENV"'/customerUserPoolId").Value')" >> $GITHUB_ENV
          echo "WEB_CLIENT_ID=$(echo "$PARAMS" | jq -r '.Parameters[] | select(.Name=="/myRewardsApp/'"$APP_ENV"'/customerWebClientId").Value')" >> $GITHUB_ENV
          echo "IDENTITY_POOL_ID=$(echo "$PARAMS" | jq -r '.Parameters[] | select(.Name=="/myRewardsApp/'"$APP_ENV"'/identityPoolIdCustomer").Value')" >> $GITHUB_ENV
          echo "APP_CONFIG_VALUES=$(echo "$PARAMS" | jq -r '.Parameters[] | select(.Name=="/myRewardsApp/'"$APP_ENV"'/appConfig").Value')" >> $GITHUB_ENV
          echo "AWS_REGION=${{ vars.AWS_REGION }}" >> $GITHUB_ENV
          echo "APP_ENV=$APP_ENV" >> $GITHUB_ENV

      # Add environment validation step
      - name: Validate Environment Variables
        run: |
          echo "Checking environment variables..."
          [[ -n "$USERPOOL_ID" ]] || exit 1
          [[ -n "$WEB_CLIENT_ID" ]] || exit 1
          [[ -n "$IDENTITY_POOL_ID" ]] || exit 1
          [[ -n "$APP_CONFIG_VALUES" ]] || exit 1
          echo "Environment variables validated successfully"


      - name: 🏗 Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: 📦 Install dependencies
        run: npm install


      - name: 🏗 Build for App Store
        id: ios_build
        run: |
          # Start the build with auto runtime version
          BUILD_OUTPUT=$(eas build --platform ios --profile development --non-interactive --auto-runtime-version --json)
          BUILD_ID=$(echo "$BUILD_OUTPUT" | jq -r '.id')
          
          # Store the build ID for later steps
          echo "build_id=$BUILD_ID" >> $GITHUB_OUTPUT
          echo "iOS build started with ID: $BUILD_ID"
          
      - name: 🚀 Create update
        run: eas update --auto --non-interactive